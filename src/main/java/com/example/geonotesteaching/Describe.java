package com.example.geonotesteaching;

import com.example.geonotesteaching.Attachment.*;

// Esta clase emplea 'switch expressions' y 'pattern matching' para representar un 'Attachment'.
// Los 'switch expressions' permiten que el 'switch' se utilice como una expresiÃ³n que produce un resultado.
// El 'pattern matching' en cada 'case' posibilita extraer datos del objeto y
// aÃ±adir una condiciÃ³n ('when') de manera mÃ¡s compacta.
// Java requiere que el switch sea completo cuando se usa como expresiÃ³n, por eso
// todos los tipos concretos de Attachment deben estar contemplados en un case.
// El primer case de Video se ejecuta Ãºnicamente si el video tiene una duraciÃ³n mayor a 120 segundos.
// El segundo case actÃºa como un "respaldo" que cubre los demÃ¡s casos del tipo Video que no cumplen la condiciÃ³n.
// Se ha cambiado el identificador de la variable 'a' a 'audio' porque el compilador no distingue
// si 'a' correspondÃ­a al argumento del mÃ©todo o al patrÃ³n del case.


final class Describe {
    public static String describeAttachment(Attachment a) {
        return switch (a) {
            case Photo p when p.width() > 1920 -> "ðŸ“· Foto en alta definiciÃ³n (%d x %d)".formatted(p.width(), p.height());
            case Photo p -> "ðŸ“· Foto";
            case Audio audio when audio.duration() > 300 -> {
                var mins = audio.duration() / 60;
                yield " Audio (" + mins + " min)" ;
            }
            case Audio audio -> "ðŸŽµ Audio";
            case Link l -> "ðŸ”— %s".formatted((l.label() == null || l.label().isEmpty()) ? l.url() : l.label());
            case Video v when v.seconds() > 120-> "ï¿¿ VÃ­deo largo";
            case Video v-> "ï¿¿ VÃ­deo";
        };
    }

        static int mediaPixels(Object o) {
            if(o instanceof Photo) {
                return ((Photo) o).width() * ((Photo) o).height();
            } else if (o instanceof Video) {
                return ((Video) o).width() * ((Video) o).height();
            } else {
                return 0;
            }
        }


}